{
	"info": {
		"_postman_id": "49061890-b81e50d9-de91-40ef-9fde-98139f1e36bd",
		"name": "API Test Automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2e65277f-102f-4714-b907-86a3ed14c0be",
						"exec": [
							"pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
							"pm.test(\"Status message is Created\", () => pm.response.to.have.status(\"Created\"));",
							"pm.test(\"Response has name and job\", () => {",
							"    const res = pm.response.json();",
							"    pm.expect(res.name).to.eql(pm.variables.get(\"name\"));",
							"    pm.expect(res.job).to.eql(pm.variables.get(\"job\"));",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "49061890-ccecfc27-9dbb-4ee0-a0bc-9712e3aeba32",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"{{name}}\",\n  \"job\": \"{{job}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "single user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cb50cd3d-3134-47bd-b1f1-47fb567bd77f",
						"exec": [
							"const res = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", () => pm.expect(pm.response.code).to.eql(200));",
							"pm.test(\"Status message is OK\", () => pm.expect(pm.response.status).to.eql(\"OK\"));",
							"pm.test(\"Response has correct user id\", () => {",
							"    pm.expect(res.data).to.have.property(\"id\", parseInt(pm.variables.get(\"user_id\")));",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "49061890-8933fd6b-d5dd-4216-8851-7ab6e154eb9e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/users/{{user_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9b535a69-2be7-4f1c-a7ad-78873c8080bf",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
							"pm.test(\"Status message is OK\", () => pm.response.to.have.status(\"OK\"));",
							"pm.test(\"Contains users data\", () => {",
							"    const res = pm.response.json();",
							"    pm.expect(res.data.length).to.be.above(0);",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "49061890-773e4712-f57c-45de-82e2-a0962c7ff70a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/users?page=2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update user(partial update)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7ae5a9b8-01ec-4f37-9dd7-b15c140622a9",
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8a58077a-66a7-46e2-8453-4014f47c10c9",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response includes updated job\", function () {",
							"    var res = pm.response.json();",
							"    pm.expect(res.job).to.eql(\"Automation Tester\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "49061890-ea455b03-3807-4bfa-bc59-783ed7ab876f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"job\": \"Automation Tester\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users/{{user_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user(full update)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "02ae7142-6a42-4756-bc25-c66f55c1ea9d",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
							"pm.test(\"Response matches updated data\", () => {",
							"    const res = pm.response.json();",
							"    pm.expect(res.name).to.eql(\"Ezekiel Updated\");",
							"    pm.expect(res.job).to.eql(\"Technical Manager\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "49061890-93b3ec22-e085-4228-943d-678083b74f57",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Ezekiel Updated\",\n  \"job\": \"Technical Manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users/{{user_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "289598ce-3fe1-4963-b6fe-66acbc71d4e1",
						"exec": [
							"pm.test(\"Status code is 204\", () => pm.response.to.have.status(204));",
							"pm.test(\"Status message is No Content\", () => pm.response.to.have.status(\"No Content\"));"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "49061890-74d98030-a7cc-4c14-9267-c3755131b626",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqre-free-v1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/users/{{user_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "register user positive",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "596f3d4e-12ad-43e1-a390-7ffaef7e22cd",
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "132e4f43-ff0d-4f1b-a292-76db1d1c2834",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
							"pm.test(\"Response contains token\", () => {",
							"    const res = pm.response.json();",
							"    pm.expect(res).to.have.property(\"token\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "49061890-752b66ac-ff0f-4dfc-bada-f6fc96d259be",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"eve.holt@reqres.in\",\n  \"password\": \"pistol\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "register user negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7718d728-74d8-4a90-95b1-882fd3b9967f",
						"exec": [
							"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
							"pm.test(\"Error message displayed\", () => {",
							"    const res = pm.response.json();",
							"    pm.expect(res.error).to.eql(\"Missing password\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "49061890-3621418a-80cd-469e-b3c4-12c2dc258133",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"eve.holt@reqres.in\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{api_key}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "x-api-key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4013e483-5749-4493-954d-031085574866",
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					"pm.request.headers.add({",
					"    key: \"x-api-key\",",
					"    value: pm.environment.get(\"api_key\") || \"reqres-free-v1\"",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "8d97dcab-12c9-4890-ad8d-2b9865a30542",
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "job",
			"value": ""
		},
		{
			"key": "api_key",
			"value": ""
		}
	]
}